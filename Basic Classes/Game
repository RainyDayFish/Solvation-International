import java.util.*;
public class Game{
  
  String name;
  Sprite chosenSprite;
  Score score;
  int level;
  int diffLevel;
  World world;
  int questionNum=0;
  int lives=4-level;
  int speed=0;
  int time;
  public String getName(){
    
    return name;
  }
  public Sprite getChosenSprite(){
    return chosenSprite;
  }
  
  public Score getScore(){
    return score;
  }
  public int getLevel(){
    return level;
  }
  public int getDiffLevel(){
    return diffLevel;
  }
  public void setName(String newName){
    name=newName;
  }
  public void setChosenSprite(Sprite sprite){
    chosenSprite=sprite;
  }
  public void setDifficultyLevel(int newDifficulty){
    diffLevel=newDifficulty;
  }public void setLevel(int newLevel){
    level=newLevel;
  }
  
  public void setScore(Score newScore){
    score=newScore;
  }
  public void pauseGame(){
    
  }
  public int landedWhere(){
    int counter=0;
    for(Platform a:world.getLevel(level).getPlatforms()){
      
      if(chosenSprite.getX()>=a.getX()&&chosenSprite.getX()<=a.getX()+30&&chosenSprite.getY()==a.getY()){
    return counter;
    }
      counter++;
  }
    return -1;
  }
  public boolean correctLanded(){
    if (world.getLevel(level).getPlatforms(). get(landedWhere()).getText().equals(world.getLevel(level).getQuestions().get(questionNum))){
    return true;
    }
  
    return false;
  }
  public void inGame(){
time=(int)world.getLevel(level).getTimeLimit();
    while(lives>0){
      time--;
    chosenSprite.setY(chosenSprite.getY()+speed);
    if(landedWhere()>-1){
    
    if(chosenSprite.getY()<250){
    platShift();
    }else {
    speed*=-1;
    }
    }else{
      if(chosenSprite.getY()<=world.getLevel(level).getLowest()+50){
      lives--;
      chosenSprite.setY(world.getLevel(level).getLowest());
      speed=10;
      }
    }
    if(correctLanded()){
    time=(int)world.getLevel(level).getTimeLimit();
    }else{
      if (time<1){
      lives--;
      time=(int)world.getLevel(level).getTimeLimit();
      }
    }
    
    speed+=2;
    world.getLevel(level).cleanPlatform ();
    }
  }
  public void platShift(){
    while(speed>0){
      for(Platform a:world.getLevel(level).getPlatforms()){
      a.setY(a.getY()+speed);
      }
      speed -=2;
    }
  }
  public Game(String name, Sprite me, Score score, int level, int diff){
    this.name=name;
    chosenSprite=me;
    this.score= score;
    this.level=level;
    diffLevel=diff;
    List <GameLevel> levels=new ArrayList <GameLevel>();
    levels.add(new GameLevel(level, 50-10.0*level*1,null ));
    levels.add(new GameLevel(level, 50-10.0*level*2,null ));
    levels.add(new GameLevel(level, 50-10.0*level*3,null ));
    world=new World( diff, levels);
  }
  
}
